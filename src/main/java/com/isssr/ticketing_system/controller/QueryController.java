package com.isssr.ticketing_system.controller;

import com.isssr.ticketing_system.model.TicketPriority;
import com.isssr.ticketing_system.model.auto_generated.ConcreteTimeQuery;
import com.isssr.ticketing_system.model.auto_generated.Query;
import com.isssr.ticketing_system.model.auto_generated.decorator.DataBaseQuery;
import com.isssr.ticketing_system.model.auto_generated.enumeration.ComparisonOperatorsEnum;
import com.isssr.ticketing_system.model.auto_generated.temporary.DataBaseTimeQuery;
import com.isssr.ticketing_system.model.auto_generated.temporary.QueryType;
import com.isssr.ticketing_system.repository.ProductRepository;
import com.isssr.ticketing_system.repository.TeamRepository;
import com.isssr.ticketing_system.repository.TicketRepository;
import com.isssr.ticketing_system.response_entity.CommonResponseEntity;
import com.isssr.ticketing_system.service.TicketPriorityService;
import com.isssr.ticketing_system.service.auto_generated.AutoGeneratedTicketService;
import com.isssr.ticketing_system.service.auto_generated.QueryService;
import org.quartz.SchedulerException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.PostConstruct;
import java.text.ParseException;
import java.util.ArrayList;

@Validated
@RestController
@RequestMapping(path = "/api/v1/queries")
public class QueryController {

    @Autowired
    private AutoGeneratedTicketService autoGeneratedTicketService;

    @Autowired
    private QueryService queryService;

    @Autowired
    private TicketPriorityService ticketPriorityService;

    /*@Autowired
    private TicketPriorityService ticketPriorityService;*/

    /*@Autowired
    private TaskScheduler taskScheduler;*/

    //@PostConstruct
    public void startScheduling() {

        try {
            autoGeneratedTicketService.startScheduling();
        } catch (ParseException | SchedulerException e) {
            System.out.println("Error while trying to start scheduling");
            e.printStackTrace();
        }
    }

    @RequestMapping(method = RequestMethod.PUT)
    public ResponseEntity create(@RequestBody DataBaseTimeQuery dataBaseTimeQuery) {

        // try to create new query
        try {
            autoGeneratedTicketService.activateQuery(dataBaseTimeQuery);
        } catch (ParseException | SchedulerException e) {
           CommonResponseEntity.UnprocessableEntityResponseEntity(e.getMessage());
        }

        queryService.create(dataBaseTimeQuery);

        return CommonResponseEntity.OkResponseEntity("CREATED");
    }
}
